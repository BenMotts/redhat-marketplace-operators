apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "apik10.kasten.io/v1alpha1",
          "kind": "K10",
          "metadata": {
            "name": "k10"
          },
          "spec": {
            "apigateway": {
              "serviceResolver": "dns"
            },
            "apiservices": {
              "deployed": true
            },
            "auth": {
              "basicAuth": {
                "enabled": false,
                "htpasswd": "",
                "secretName": ""
              },
              "dex": {
                "enabled": false,
                "providerURL": "",
                "redirectURL": ""
              },
              "groupAllowList": [],
              "k10AdminGroups": [],
              "k10AdminUsers": [],
              "ldap": {
                "bindDN": "",
                "bindPW": "",
                "bindPWSecretName": "",
                "dashboardURL": "",
                "enabled": false,
                "groupSearch": {
                  "baseDN": "",
                  "filter": "",
                  "nameAttr": "",
                  "userMatchers": []
                },
                "groupnameClaim": "groups",
                "groupnamePrefix": "",
                "host": "",
                "insecureNoSSL": false,
                "insecureSkipVerifySSL": false,
                "restartPod": false,
                "secretName": "",
                "startTLS": false,
                "userSearch": {
                  "baseDN": "",
                  "emailAttr": "",
                  "filter": "",
                  "idAttr": "",
                  "nameAttr": "",
                  "preferredUsernameAttr": "",
                  "username": ""
                },
                "usernameClaim": "email",
                "usernamePrefix": ""
              },
              "oidcAuth": {
                "clientID": "",
                "clientSecret": "",
                "enabled": false,
                "groupClaim": "",
                "groupPrefix": "",
                "logoutURL": "",
                "prompt": "select_account",
                "providerURL": "",
                "redirectURL": "",
                "scopes": "",
                "secretName": "",
                "usernameClaim": "",
                "usernamePrefix": ""
              },
              "openshift": {
                "clientSecret": "",
                "dashboardURL": "",
                "enabled": false,
                "groupnameClaim": "groups",
                "groupnamePrefix": "",
                "insecureCA": false,
                "openshiftURL": "",
                "secretName": "",
                "serviceAccount": "",
                "useServiceAccountCA": false,
                "usernameClaim": "email",
                "usernamePrefix": ""
              },
              "tokenAuth": {
                "enabled": false
              }
            },
            "awsConfig": {
              "assumeRoleDuration": "",
              "efsBackupVaultName": "k10vault"
            },
            "azure": {
              "useDefaultMSI": false
            },
            "cacertconfigmap": {
              "name": ""
            },
            "cluster": {
              "domainName": "cluster.local"
            },
            "clusterName": "",
            "dexImage": {
              "image": "dex",
              "registry": "ghcr.io",
              "repository": "dexidp"
            },
            "encryption": {
              "primaryKey": {
                "awsCmkKeyId": "",
                "vaultTransitKeyName": "",
                "vaultTransitPath": ""
              }
            },
            "eula": {
              "accept": false
            },
            "excludedApps": [],
            "executorReplicas": 3,
            "externalGateway": {
              "annotations": {},
              "awsSSLCertARN": "",
              "create": false,
              "fqdn": {
                "name": "",
                "type": ""
              }
            },
            "garbagecollector": {
              "daemonPeriod": 21600,
              "importRunActions": {
                "enabled": false
              },
              "keepMaxActions": 1000,
              "retireActions": {
                "enabled": false
              }
            },
            "gateway": {
              "exposeAdminPort": true,
              "insecureDisableSSLVerify": false,
              "resources": {
                "limits": {
                  "cpu": "1000m",
                  "memory": "1Gi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "300Mi"
                }
              }
            },
            "genericVolumeSnapshot": {
              "resources": {
                "limits": {
                  "cpu": "",
                  "memory": ""
                },
                "requests": {
                  "cpu": "",
                  "memory": ""
                }
              }
            },
            "global": {
              "airgapped": {
                "repository": ""
              },
              "imagePullSecret": "",
              "images": {
                "admin": "",
                "aggregatedapis": "",
                "ambassador": "",
                "auth": "",
                "bloblifecyclemanager": "",
                "catalog": "",
                "cephtool": "",
                "configmap-reload": "",
                "controllermanager": "",
                "crypto": "",
                "dashboardbff": "",
                "datamover": "",
                "dex": "",
                "emissary": "",
                "events": "",
                "executor": "",
                "frontend": "",
                "garbagecollector": "",
                "grafana": "",
                "jobs": "",
                "kanister": "",
                "kanister-tools": "",
                "logging": "",
                "metering": "",
                "paygo_daemonset": "",
                "prometheus": "",
                "state": "",
                "upgrade": "",
                "vbrintegrationapi": ""
              },
              "ingress": {
                "create": false,
                "urlPath": ""
              },
              "network": {
                "enable_ipv6": false
              },
              "persistence": {
                "accessMode": "ReadWriteOnce",
                "catalog": {
                  "size": ""
                },
                "enabled": true,
                "grafana": {
                  "size": "5Gi"
                },
                "jobs": {
                  "size": ""
                },
                "logging": {
                  "size": ""
                },
                "metering": {
                  "size": "2Gi"
                },
                "mountPath": "/mnt/k10state",
                "size": "20Gi",
                "storageClass": ""
              },
              "prometheus": {
                "external": {
                  "baseURL": "",
                  "host": "",
                  "port": ""
                }
              },
              "rhMarketPlace": true,
              "route": {
                "enabled": false,
                "path": ""
              },
              "upstreamCertifiedImages": false
            },
            "grafana": {
              "admin": {
                "existingSecret": "",
                "passwordKey": "admin-password",
                "userKey": "admin-user"
              },
              "adminUser": "admin",
              "affinity": {},
              "autoscaling": {
                "enabled": false
              },
              "containerSecurityContext": {},
              "createConfigmap": true,
              "dashboardProviders": {
                "dashboardproviders.yaml": {
                  "apiVersion": 1,
                  "providers": [
                    {
                      "disableDeletion": true,
                      "editable": false,
                      "folder": "",
                      "name": "default",
                      "options": {
                        "path": "/var/lib/grafana/dashboards"
                      },
                      "orgId": 1,
                      "type": "file"
                    }
                  ]
                }
              },
              "dashboards": {
                "default": {
                  "default": {
                    "json": "{\n  \"annotations\": {\n    \"list\": [\n      {\n        \"builtIn\": 1,\n        \"datasource\": \"-- Grafana --\",\n        \"enable\": true,\n        \"hide\": true,\n        \"iconColor\": \"rgba(0, 211, 255, 1)\",\n        \"name\": \"Annotations \u0026 Alerts\",\n        \"target\": {\n          \"limit\": 100,\n          \"matchAny\": false,\n          \"tags\": [],\n          \"type\": \"dashboard\"\n        },\n        \"type\": \"dashboard\"\n      }\n    ]\n  },\n  \"editable\": true,\n  \"gnetId\": null,\n  \"graphTooltip\": 0,\n  \"id\": 1,\n  \"iteration\": 1645712665620,\n  \"links\": [],\n  \"panels\": [\n    {\n      \"collapsed\": false,\n      \"datasource\": null,\n      \"gridPos\": {\n        \"h\": 1,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 0\n      },\n      \"id\": 18,\n      \"panels\": [],\n      \"title\": \"Applications\",\n      \"type\": \"row\"\n    },\n    {\n      \"datasource\": \"Prometheus\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [],\n          \"noValue\": \"0\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"yellow\",\n                \"value\": null\n              },\n              {\n                \"color\": \"green\",\n                \"value\": 1\n              }\n            ]\n          }\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 5,\n        \"x\": 0,\n        \"y\": 1\n      },\n      \"id\": 24,\n      \"interval\": \"1m\",\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"none\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"last\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"8.1.8\",\n      \"targets\": [\n        {\n          \"exemplar\": false,\n          \"expr\": \"sum(round(increase(action_backup_ended_overall{cluster=\\\"$cluster\\\", state=\\\"succeeded\\\"}[$__range])))\",\n          \"hide\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"B\"\n        }\n      ],\n      \"timeFrom\": null,\n      \"title\": \"Backups Completed\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": \"Prometheus\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [\n            {\n              \"options\": {\n                \"0\": {\n                  \"index\": 0,\n                  \"text\": \"-\"\n                }\n              },\n              \"type\": \"value\"\n            }\n          ],\n          \"noValue\": \"-\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"text\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 1\n              }\n            ]\n          }\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 3,\n        \"x\": 5,\n        \"y\": 1\n      },\n      \"id\": 33,\n      \"interval\": \"1m\",\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"none\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"last\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"8.1.8\",\n      \"targets\": [\n        {\n          \"exemplar\": false,\n          \"expr\": \"sum(round(increase(action_backup_ended_overall{cluster=\\\"$cluster\\\", state=~\\\"failed|cancelled\\\"}[$__range])))\",\n          \"hide\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"B\"\n        }\n      ],\n      \"timeFrom\": null,\n      \"title\": \"Backups Failed\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": \"Prometheus\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [\n            {\n              \"options\": {\n                \"0\": {\n                  \"index\": 0,\n                  \"text\": \"-\"\n                }\n              },\n              \"type\": \"value\"\n            }\n          ],\n          \"noValue\": \"-\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"text\",\n                \"value\": null\n              },\n              {\n                \"color\": \"#EAB839\",\n                \"value\": 1\n              }\n            ]\n          }\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 3,\n        \"x\": 8,\n        \"y\": 1\n      },\n      \"id\": 34,\n      \"interval\": \"1m\",\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"none\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"last\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"8.1.8\",\n      \"targets\": [\n        {\n          \"exemplar\": false,\n          \"expr\": \"sum(round(increase(action_backup_skipped_overall{cluster=\\\"$cluster\\\"}[$__range])))\",\n          \"hide\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"B\"\n        }\n      ],\n      \"timeFrom\": null,\n      \"title\": \"Backups Skipped\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": \"Prometheus\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [\n            {\n              \"options\": {\n                \"0\": {\n                  \"index\": 0,\n                  \"text\": \"-\"\n                }\n              },\n              \"type\": \"value\"\n            }\n          ],\n          \"noValue\": \"-\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"text\",\n                \"value\": null\n              },\n              {\n                \"color\": \"green\",\n                \"value\": 1\n              }\n            ]\n          }\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 5,\n        \"x\": 13,\n        \"y\": 1\n      },\n      \"id\": 35,\n      \"interval\": \"1m\",\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"none\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"last\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"8.1.8\",\n      \"targets\": [\n        {\n          \"exemplar\": false,\n          \"expr\": \"sum(round(increase(action_restore_ended_overall{cluster=\\\"$cluster\\\", state=\\\"succeeded\\\"}[$__range])))\",\n          \"hide\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"B\"\n        }\n      ],\n      \"timeFrom\": null,\n      \"title\": \"Restores Completed\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": \"Prometheus\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [\n            {\n              \"options\": {\n                \"0\": {\n                  \"index\": 0,\n                  \"text\": \"-\"\n                }\n              },\n              \"type\": \"value\"\n            }\n          ],\n          \"noValue\": \"-\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"text\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 1\n              }\n            ]\n          }\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 3,\n        \"x\": 18,\n        \"y\": 1\n      },\n      \"id\": 36,\n      \"interval\": \"1m\",\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"none\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"last\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"8.1.8\",\n      \"targets\": [\n        {\n          \"exemplar\": false,\n          \"expr\": \"sum(round(increase(action_restore_ended_overall{cluster=\\\"$cluster\\\", state=~\\\"failed|cancelled\\\"}[$__range])))\",\n          \"hide\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"B\"\n        }\n      ],\n      \"timeFrom\": null,\n      \"title\": \"Restores Failed\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": \"Prometheus\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [\n            {\n              \"options\": {\n                \"0\": {\n                  \"index\": 0,\n                  \"text\": \"-\"\n                }\n              },\n              \"type\": \"value\"\n            }\n          ],\n          \"noValue\": \"-\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"text\",\n                \"value\": null\n              },\n              {\n                \"color\": \"#EAB839\",\n                \"value\": 1\n              }\n            ]\n          }\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 3,\n        \"x\": 21,\n        \"y\": 1\n      },\n      \"id\": 23,\n      \"interval\": \"1m\",\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"none\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"last\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"8.1.8\",\n      \"targets\": [\n        {\n          \"exemplar\": false,\n          \"expr\": \"sum(round(increase(action_restore_skipped_overall{cluster=\\\"$cluster\\\"}[$__range])))\",\n          \"hide\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"B\"\n        }\n      ],\n      \"timeFrom\": null,\n      \"title\": \"Restores Skipped\",\n      \"type\": \"stat\"\n    },\n    {\n      \"collapsed\": false,\n      \"datasource\": null,\n      \"gridPos\": {\n        \"h\": 1,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 8\n      },\n      \"id\": 16,\n      \"panels\": [],\n      \"title\": \"Cluster\",\n      \"type\": \"row\"\n    },\n    {\n      \"datasource\": \"Prometheus\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [],\n          \"noValue\": \"0\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"yellow\",\n                \"value\": null\n              },\n              {\n                \"color\": \"green\",\n                \"value\": 1\n              }\n            ]\n          }\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 5,\n        \"x\": 0,\n        \"y\": 9\n      },\n      \"id\": 10,\n      \"interval\": \"1m\",\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"none\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"last\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"8.1.8\",\n      \"targets\": [\n        {\n          \"exemplar\": false,\n          \"expr\": \"sum(round(increase(action_backup_cluster_ended_overall{cluster=\\\"$cluster\\\", state=\\\"succeeded\\\"}[$__range])))\",\n          \"hide\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"B\"\n        }\n      ],\n      \"timeFrom\": null,\n      \"title\": \"Cluster Backups Completed\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": \"Prometheus\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [\n            {\n              \"options\": {\n                \"0\": {\n                  \"index\": 0,\n                  \"text\": \"-\"\n                }\n              },\n              \"type\": \"value\"\n            }\n          ],\n          \"noValue\": \"-\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"text\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 1\n              }\n            ]\n          }\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 3,\n        \"x\": 5,\n        \"y\": 9\n      },\n      \"id\": 19,\n      \"interval\": \"1m\",\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"none\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"last\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"8.1.8\",\n      \"targets\": [\n        {\n          \"exemplar\": false,\n          \"expr\": \"sum(round(increase(action_backup_cluster_ended_overall{cluster=\\\"$cluster\\\", state=~\\\"failed|cancelled\\\"}[$__range])))\",\n          \"hide\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"B\"\n        }\n      ],\n      \"timeFrom\": null,\n      \"title\": \"Cluster Backups Failed\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": \"Prometheus\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [\n            {\n              \"options\": {\n                \"0\": {\n                  \"index\": 0,\n                  \"text\": \"-\"\n                }\n              },\n              \"type\": \"value\"\n            }\n          ],\n          \"noValue\": \"-\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"text\",\n                \"value\": null\n              },\n              {\n                \"color\": \"#EAB839\",\n                \"value\": 1\n              }\n            ]\n          }\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 3,\n        \"x\": 8,\n        \"y\": 9\n      },\n      \"id\": 28,\n      \"interval\": \"1m\",\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"none\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"last\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"8.1.8\",\n      \"targets\": [\n        {\n          \"exemplar\": false,\n          \"expr\": \"sum(round(increase(action_backup_cluster_skipped_overall{cluster=\\\"$cluster\\\"}[$__range])))\",\n          \"hide\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"B\"\n        }\n      ],\n      \"timeFrom\": null,\n      \"title\": \"Cluster Backups Skipped\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": \"Prometheus\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [\n            {\n              \"options\": {\n                \"0\": {\n                  \"index\": 0,\n                  \"text\": \"-\"\n                }\n              },\n              \"type\": \"value\"\n            }\n          ],\n          \"noValue\": \"-\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"text\",\n                \"value\": null\n              },\n              {\n                \"color\": \"green\",\n                \"value\": 1\n              }\n            ]\n          }\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 5,\n        \"x\": 13,\n        \"y\": 9\n      },\n      \"id\": 21,\n      \"interval\": \"1m\",\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"none\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"last\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"8.1.8\",\n      \"targets\": [\n        {\n          \"exemplar\": false,\n          \"expr\": \"sum(round(increase(action_restore_cluster_ended_overall{cluster=\\\"$cluster\\\", state=\\\"succeeded\\\"}[$__range])))\",\n          \"hide\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"B\"\n        }\n      ],\n      \"timeFrom\": null,\n      \"title\": \"Cluster Restores Completed\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": \"Prometheus\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [\n            {\n              \"options\": {\n                \"0\": {\n                  \"index\": 0,\n                  \"text\": \"-\"\n                }\n              },\n              \"type\": \"value\"\n            }\n          ],\n          \"noValue\": \"-\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"text\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 1\n              }\n            ]\n          }\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 3,\n        \"x\": 18,\n        \"y\": 9\n      },\n      \"id\": 22,\n      \"interval\": \"1m\",\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"none\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"last\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"8.1.8\",\n      \"targets\": [\n        {\n          \"exemplar\": false,\n          \"expr\": \"sum(round(increase(action_restore_cluster_ended_overall{cluster=\\\"$cluster\\\", state=~\\\"failed|cancelled\\\"}[$__range])))\",\n          \"hide\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"B\"\n        }\n      ],\n      \"timeFrom\": null,\n      \"title\": \"Cluster Restores Failed\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": \"Prometheus\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [\n            {\n              \"options\": {\n                \"0\": {\n                  \"index\": 0,\n                  \"text\": \"-\"\n                }\n              },\n              \"type\": \"value\"\n            }\n          ],\n          \"noValue\": \"-\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"text\",\n                \"value\": null\n              },\n              {\n                \"color\": \"#EAB839\",\n                \"value\": 1\n              }\n            ]\n          }\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 3,\n        \"x\": 21,\n        \"y\": 9\n      },\n      \"id\": 25,\n      \"interval\": \"1m\",\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"none\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"last\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"8.1.8\",\n      \"targets\": [\n        {\n          \"exemplar\": false,\n          \"expr\": \"sum(round(increase(action_restore_cluster_skipped_overall{cluster=\\\"$cluster\\\"}[$__range])))\",\n          \"hide\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"B\"\n        }\n      ],\n      \"timeFrom\": null,\n      \"title\": \"Cluster Restores Skipped\",\n      \"type\": \"stat\"\n    },\n    {\n      \"collapsed\": false,\n      \"datasource\": null,\n      \"gridPos\": {\n        \"h\": 1,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 16\n      },\n      \"id\": 31,\n      \"panels\": [],\n      \"title\": \"Backup Exports\",\n      \"type\": \"row\"\n    },\n    {\n      \"datasource\": \"Prometheus\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [],\n          \"noValue\": \"0\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"text\",\n                \"value\": null\n              },\n              {\n                \"color\": \"green\",\n                \"value\": 1\n              }\n            ]\n          }\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 6,\n        \"w\": 5,\n        \"x\": 0,\n        \"y\": 17\n      },\n      \"id\": 38,\n      \"interval\": \"1m\",\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"none\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"last\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"8.1.8\",\n      \"targets\": [\n        {\n          \"exemplar\": false,\n          \"expr\": \"sum(round(increase(action_export_ended_overall{cluster=\\\"$cluster\\\", state=\\\"succeeded\\\"}[$__range])))\",\n          \"hide\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"B\"\n        }\n      ],\n      \"timeFrom\": null,\n      \"title\": \"Exports Completed\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": \"Prometheus\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [\n            {\n              \"options\": {\n                \"0\": {\n                  \"index\": 0,\n                  \"text\": \"-\"\n                }\n              },\n              \"type\": \"value\"\n            }\n          ],\n          \"noValue\": \"-\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"text\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 1\n              }\n            ]\n          }\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 6,\n        \"w\": 3,\n        \"x\": 5,\n        \"y\": 17\n      },\n      \"id\": 29,\n      \"interval\": \"1m\",\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"none\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"last\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"8.1.8\",\n      \"targets\": [\n        {\n          \"exemplar\": false,\n          \"expr\": \"sum(round(increase(action_export_ended_overall{cluster=\\\"$cluster\\\", state=~\\\"failed|cancelled\\\"}[$__range])))\",\n          \"hide\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"B\"\n        }\n      ],\n      \"timeFrom\": null,\n      \"title\": \"Exports Failed\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": \"Prometheus\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [\n            {\n              \"options\": {\n                \"0\": {\n                  \"index\": 0,\n                  \"text\": \"-\"\n                }\n              },\n              \"type\": \"value\"\n            }\n          ],\n          \"noValue\": \"-\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"text\",\n                \"value\": null\n              },\n              {\n                \"color\": \"#EAB839\",\n                \"value\": 1\n              }\n            ]\n          }\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 6,\n        \"w\": 3,\n        \"x\": 8,\n        \"y\": 17\n      },\n      \"id\": 20,\n      \"interval\": \"1m\",\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"none\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"last\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"8.1.8\",\n      \"targets\": [\n        {\n          \"exemplar\": false,\n          \"expr\": \"sum(round(increase(action_export_skipped_overall{cluster=\\\"$cluster\\\"}[$__range])))\",\n          \"hide\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"B\"\n        }\n      ],\n      \"timeFrom\": null,\n      \"title\": \"Exports Skipped\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": \"Prometheus\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [],\n          \"noValue\": \"0\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"text\",\n                \"value\": null\n              },\n              {\n                \"color\": \"green\",\n                \"value\": 1\n              }\n            ]\n          }\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 6,\n        \"w\": 5,\n        \"x\": 13,\n        \"y\": 17\n      },\n      \"id\": 27,\n      \"interval\": \"1m\",\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"none\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"last\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"8.1.8\",\n      \"targets\": [\n        {\n          \"exemplar\": false,\n          \"expr\": \"sum(round(increase(action_import_ended_overall{cluster=\\\"$cluster\\\", state=\\\"succeeded\\\"}[$__range])))\",\n          \"hide\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"B\"\n        }\n      ],\n      \"timeFrom\": null,\n      \"title\": \"Imports Completed\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": \"Prometheus\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [\n            {\n              \"options\": {\n                \"0\": {\n                  \"index\": 0,\n                  \"text\": \"-\"\n                }\n              },\n              \"type\": \"value\"\n            }\n          ],\n          \"noValue\": \"-\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"text\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 1\n              }\n            ]\n          }\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 6,\n        \"w\": 3,\n        \"x\": 18,\n        \"y\": 17\n      },\n      \"id\": 39,\n      \"interval\": \"1m\",\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"none\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"last\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"8.1.8\",\n      \"targets\": [\n        {\n          \"exemplar\": false,\n          \"expr\": \"sum(round(increase(action_import_ended_overall{cluster=\\\"$cluster\\\", state=~\\\"failed|cancelled\\\"}[$__range])))\",\n          \"hide\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"B\"\n        }\n      ],\n      \"timeFrom\": null,\n      \"title\": \"Imports Failed\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": \"Prometheus\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [\n            {\n              \"options\": {\n                \"0\": {\n                  \"index\": 0,\n                  \"text\": \"-\"\n                }\n              },\n              \"type\": \"value\"\n            }\n          ],\n          \"noValue\": \"-\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"text\",\n                \"value\": null\n              },\n              {\n                \"color\": \"#EAB839\",\n                \"value\": 1\n              }\n            ]\n          }\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 6,\n        \"w\": 3,\n        \"x\": 21,\n        \"y\": 17\n      },\n      \"id\": 37,\n      \"interval\": \"1m\",\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"none\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"last\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"8.1.8\",\n      \"targets\": [\n        {\n          \"exemplar\": false,\n          \"expr\": \"sum(round(increase(action_import_skipped_overall{cluster=\\\"$cluster\\\"}[$__range])))\",\n          \"hide\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"B\"\n        }\n      ],\n      \"timeFrom\": null,\n      \"title\": \"Imports Skipped\",\n      \"type\": \"stat\"\n    },\n    {\n      \"collapsed\": false,\n      \"datasource\": null,\n      \"gridPos\": {\n        \"h\": 1,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 23\n      },\n      \"id\": 14,\n      \"panels\": [],\n      \"title\": \"System\",\n      \"type\": \"row\"\n    },\n    {\n      \"datasource\": \"Prometheus\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [\n            {\n              \"options\": {\n                \"0\": {\n                  \"index\": 0,\n                  \"text\": \"-\"\n                }\n              },\n              \"type\": \"value\"\n            }\n          ],\n          \"noValue\": \"-\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"text\",\n                \"value\": null\n              },\n              {\n                \"color\": \"green\",\n                \"value\": 1\n              }\n            ]\n          },\n          \"unit\": \"runs\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 6,\n        \"w\": 3,\n        \"x\": 0,\n        \"y\": 24\n      },\n      \"id\": 12,\n      \"interval\": \"1m\",\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"none\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"last\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"8.1.8\",\n      \"targets\": [\n        {\n          \"exemplar\": false,\n          \"expr\": \"sum(round(increase(action_run_ended_overall{cluster=\\\"$cluster\\\", state=\\\"succeeded\\\"}[$__range])))\",\n          \"format\": \"time_series\",\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"queryType\": \"randomWalk\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"timeFrom\": null,\n      \"title\": \"Policy Runs\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": \"Prometheus\",\n      \"description\": \"\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [\n            {\n              \"options\": {\n                \"0\": {\n                  \"index\": 0,\n                  \"text\": \"-\"\n                }\n              },\n              \"type\": \"value\"\n            }\n          ],\n          \"noValue\": \"-\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"text\",\n                \"value\": null\n              },\n              {\n                \"color\": \"yellow\",\n                \"value\": 1\n              }\n            ]\n          },\n          \"unit\": \"runs\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 6,\n        \"w\": 3,\n        \"x\": 3,\n        \"y\": 24\n      },\n      \"id\": 40,\n      \"interval\": \"1m\",\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"none\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"last\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"8.1.8\",\n      \"targets\": [\n        {\n          \"exemplar\": false,\n          \"expr\": \"sum(round(increase(action_run_skipped_overall{cluster=\\\"$cluster\\\"}[$__range])))\",\n          \"format\": \"time_series\",\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"queryType\": \"randomWalk\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"timeFrom\": null,\n      \"title\": \"Policy Runs Skipped\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": \"Prometheus\",\n      \"description\": \"\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [],\n          \"noValue\": \"-\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"#ccccdc\",\n                \"value\": null\n              }\n            ]\n          },\n          \"unit\": \"bytes\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 6,\n        \"w\": 3,\n        \"x\": 6,\n        \"y\": 24\n      },\n      \"id\": 6,\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"area\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"8.1.8\",\n      \"targets\": [\n        {\n          \"exemplar\": true,\n          \"expr\": \"catalog_persistent_volume_disk_space_used_bytes{cluster=\\\"$cluster\\\"}\",\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"queryType\": \"randomWalk\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Catalog Volume Used\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": \"Prometheus\",\n      \"description\": \"\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [],\n          \"max\": 100,\n          \"min\": 0,\n          \"noValue\": \"-\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"yellow\",\n                \"value\": 70\n              },\n              {\n                \"color\": \"orange\",\n                \"value\": 80\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 90\n              }\n            ]\n          },\n          \"unit\": \"percent\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 6,\n        \"w\": 3,\n        \"x\": 9,\n        \"y\": 24\n      },\n      \"id\": 2,\n      \"options\": {\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"showThresholdLabels\": false,\n        \"showThresholdMarkers\": true,\n        \"text\": {}\n      },\n      \"pluginVersion\": \"8.1.8\",\n      \"targets\": [\n        {\n          \"exemplar\": true,\n          \"expr\": \"100-catalog_persistent_volume_free_space_percent{cluster=\\\"$cluster\\\"}\",\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"queryType\": \"randomWalk\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Catalog Volume Used Space\",\n      \"type\": \"gauge\"\n    },\n    {\n      \"datasource\": \"Prometheus\",\n      \"description\": \"\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [],\n          \"noValue\": \"-\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"#ccccdc\",\n                \"value\": null\n              }\n            ]\n          },\n          \"unit\": \"bytes\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 6,\n        \"w\": 3,\n        \"x\": 12,\n        \"y\": 24\n      },\n      \"id\": 8,\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"area\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"8.1.8\",\n      \"targets\": [\n        {\n          \"exemplar\": true,\n          \"expr\": \"jobs_persistent_volume_disk_space_used_bytes{cluster=\\\"$cluster\\\"}\",\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"queryType\": \"randomWalk\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Jobs Volume Used\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": \"Prometheus\",\n      \"description\": \"\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [],\n          \"max\": 100,\n          \"min\": 0,\n          \"noValue\": \"-\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"yellow\",\n                \"value\": 70\n              },\n              {\n                \"color\": \"orange\",\n                \"value\": 80\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 90\n              }\n            ]\n          },\n          \"unit\": \"percent\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 6,\n        \"w\": 3,\n        \"x\": 15,\n        \"y\": 24\n      },\n      \"id\": 4,\n      \"options\": {\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"showThresholdLabels\": false,\n        \"showThresholdMarkers\": true,\n        \"text\": {}\n      },\n      \"pluginVersion\": \"8.1.8\",\n      \"targets\": [\n        {\n          \"exemplar\": true,\n          \"expr\": \"100-jobs_persistent_volume_free_space_percent{cluster=\\\"$cluster\\\"}\",\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"queryType\": \"randomWalk\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Jobs Volume Used Space\",\n      \"type\": \"gauge\"\n    },\n    {\n      \"datasource\": \"Prometheus\",\n      \"description\": \"\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [],\n          \"noValue\": \"-\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"#ccccdc\",\n                \"value\": null\n              }\n            ]\n          },\n          \"unit\": \"bytes\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 6,\n        \"w\": 3,\n        \"x\": 18,\n        \"y\": 24\n      },\n      \"id\": 7,\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"area\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"8.1.8\",\n      \"targets\": [\n        {\n          \"exemplar\": true,\n          \"expr\": \"logging_persistent_volume_disk_space_used_bytes{cluster=\\\"$cluster\\\"}\",\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"queryType\": \"randomWalk\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Logging Volume Used\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": \"Prometheus\",\n      \"description\": \"\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [],\n          \"max\": 100,\n          \"min\": 0,\n          \"noValue\": \"-\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"yellow\",\n                \"value\": 70\n              },\n              {\n                \"color\": \"orange\",\n                \"value\": 80\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 90\n              }\n            ]\n          },\n          \"unit\": \"percent\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 6,\n        \"w\": 3,\n        \"x\": 21,\n        \"y\": 24\n      },\n      \"id\": 3,\n      \"options\": {\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"showThresholdLabels\": false,\n        \"showThresholdMarkers\": true,\n        \"text\": {}\n      },\n      \"pluginVersion\": \"8.1.8\",\n      \"targets\": [\n        {\n          \"exemplar\": true,\n          \"expr\": \"100-logging_persistent_volume_free_space_percent{cluster=\\\"$cluster\\\"}\",\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"queryType\": \"randomWalk\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Logging Volume Used Space\",\n      \"type\": \"gauge\"\n    },\n    {\n      \"datasource\": \"Prometheus\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [],\n          \"noValue\": \"0\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"text\",\n                \"value\": null\n              },\n              {\n                \"color\": \"green\",\n                \"value\": 1\n              }\n            ]\n          }\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 6,\n        \"w\": 3,\n        \"x\": 0,\n        \"y\": 30\n      },\n      \"id\": 41,\n      \"interval\": \"1m\",\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"none\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"last\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"8.1.8\",\n      \"targets\": [\n        {\n          \"exemplar\": false,\n          \"expr\": \"compliance_count{state=\\\"Compliant\\\"}\",\n          \"hide\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"B\"\n        }\n      ],\n      \"timeFrom\": null,\n      \"title\": \"Compliant Applications\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": \"Prometheus\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [],\n          \"noValue\": \"0\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 1\n              }\n            ]\n          }\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 6,\n        \"w\": 3,\n        \"x\": 3,\n        \"y\": 30\n      },\n      \"id\": 42,\n      \"interval\": \"1m\",\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"none\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"last\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"8.1.8\",\n      \"targets\": [\n        {\n          \"exemplar\": false,\n          \"expr\": \"compliance_count{state=\\\"NotCompliant\\\"}\",\n          \"hide\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"B\"\n        }\n      ],\n      \"timeFrom\": null,\n      \"title\": \"Non-Compliant Applications\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": \"Prometheus\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [],\n          \"noValue\": \"0\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 1\n              }\n            ]\n          }\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 6,\n        \"w\": 3,\n        \"x\": 6,\n        \"y\": 30\n      },\n      \"id\": 43,\n      \"interval\": \"1m\",\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"none\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"last\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"8.1.8\",\n      \"targets\": [\n        {\n          \"exemplar\": false,\n          \"expr\": \"compliance_count{state=\\\"Unmanaged\\\"}\",\n          \"hide\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"B\"\n        }\n      ],\n      \"timeFrom\": null,\n      \"title\": \"Unmanaged Applications\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": \"Prometheus\",\n      \"description\": \"\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [],\n          \"noValue\": \"-\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"#ccccdc\",\n                \"value\": null\n              }\n            ]\n          },\n          \"unit\": \"bytes\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 6,\n        \"w\": 3,\n        \"x\": 12,\n        \"y\": 30\n      },\n      \"id\": 44,\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"area\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"8.1.8\",\n      \"targets\": [\n        {\n          \"exemplar\": true,\n          \"expr\": \"snapshot_storage_size_bytes{cluster=\\\"$cluster\\\", type=\\\"physical\\\"}\",\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"queryType\": \"randomWalk\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Snapshot Size (Physical)\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": \"Prometheus\",\n      \"description\": \"\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [],\n          \"noValue\": \"-\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"#ccccdc\",\n                \"value\": null\n              }\n            ]\n          },\n          \"unit\": \"bytes\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 6,\n        \"w\": 3,\n        \"x\": 15,\n        \"y\": 30\n      },\n      \"id\": 45,\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"area\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"8.1.8\",\n      \"targets\": [\n        {\n          \"exemplar\": true,\n          \"expr\": \"snapshot_storage_size_bytes{cluster=\\\"$cluster\\\", type=\\\"logical\\\"}\",\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"queryType\": \"randomWalk\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Snapshot Size (Logical)\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": \"Prometheus\",\n      \"description\": \"\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [],\n          \"noValue\": \"-\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"#ccccdc\",\n                \"value\": null\n              }\n            ]\n          },\n          \"unit\": \"bytes\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 6,\n        \"w\": 3,\n        \"x\": 18,\n        \"y\": 30\n      },\n      \"id\": 46,\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"area\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"8.1.8\",\n      \"targets\": [\n        {\n          \"exemplar\": true,\n          \"expr\": \"export_storage_size_bytes{cluster=\\\"$cluster\\\", type=\\\"physical\\\"}\",\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"queryType\": \"randomWalk\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Export Size (Physical)\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": \"Prometheus\",\n      \"description\": \"\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [],\n          \"noValue\": \"-\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"#ccccdc\",\n                \"value\": null\n              }\n            ]\n          },\n          \"unit\": \"bytes\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 6,\n        \"w\": 3,\n        \"x\": 21,\n        \"y\": 30\n      },\n      \"id\": 47,\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"area\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"8.1.8\",\n      \"targets\": [\n        {\n          \"exemplar\": true,\n          \"expr\": \"export_storage_size_bytes{cluster=\\\"$cluster\\\", type=\\\"logical\\\"}\",\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"queryType\": \"randomWalk\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Export Size (Logical)\",\n      \"type\": \"stat\"\n    }\n  ],\n  \"schemaVersion\": 30,\n  \"style\": \"dark\",\n  \"tags\": [],\n  \"templating\": {\n    \"list\": [\n      {\n        \"description\": null,\n        \"error\": null,\n        \"hide\": 2,\n        \"label\": \"Cluster\",\n        \"name\": \"cluster\",\n        \"query\": \"\",\n        \"skipUrlSync\": false,\n        \"type\": \"constant\"\n      }\n    ]\n  },\n  \"time\": {\n    \"from\": \"now-24h\",\n    \"to\": \"now\"\n  },\n  \"timepicker\": {},\n  \"timezone\": \"\",\n  \"title\": \"K10 Dashboard\",\n  \"uid\": \"8Ebb3xS7k\",\n  \"version\": 1\n}\n"
                  }
                }
              },
              "dashboardsConfigMaps": {},
              "datasources": {},
              "deploymentStrategy": {
                "type": "Recreate"
              },
              "downloadDashboards": {
                "env": {},
                "envFromSecret": "",
                "resources": {}
              },
              "downloadDashboardsImage": {
                "pullPolicy": "IfNotPresent",
                "repository": "curlimages/curl",
                "sha": "",
                "tag": "7.73.0"
              },
              "enableKubeBackwardCompatibility": false,
              "enableServiceLinks": true,
              "enabled": true,
              "env": {},
              "envFromConfigMaps": [],
              "envFromSecret": "",
              "envFromSecrets": [],
              "envRenderSecret": {},
              "envValueFrom": {},
              "extraConfigmapMounts": [],
              "extraContainerVolumes": [],
              "extraContainers": "",
              "extraEmptyDirMounts": [],
              "extraExposePorts": [],
              "extraInitContainers": [],
              "extraLabels": {
                "component": "grafana"
              },
              "extraObjects": [],
              "extraSecretMounts": [],
              "extraVolumeMounts": [],
              "global": {
                "airgapped": {
                  "repository": ""
                },
                "imagePullSecret": "",
                "images": {
                  "admin": "",
                  "aggregatedapis": "",
                  "ambassador": "",
                  "auth": "",
                  "bloblifecyclemanager": "",
                  "catalog": "",
                  "cephtool": "",
                  "configmap-reload": "",
                  "controllermanager": "",
                  "crypto": "",
                  "dashboardbff": "",
                  "datamover": "",
                  "dex": "",
                  "emissary": "",
                  "events": "",
                  "executor": "",
                  "frontend": "",
                  "garbagecollector": "",
                  "grafana": "",
                  "jobs": "",
                  "kanister": "",
                  "kanister-tools": "",
                  "logging": "",
                  "metering": "",
                  "paygo_daemonset": "",
                  "prometheus": "",
                  "state": "",
                  "upgrade": "",
                  "vbrintegrationapi": ""
                },
                "ingress": {
                  "create": false,
                  "urlPath": ""
                },
                "network": {
                  "enable_ipv6": false
                },
                "persistence": {
                  "accessMode": "ReadWriteOnce",
                  "catalog": {
                    "size": ""
                  },
                  "enabled": true,
                  "grafana": {
                    "size": "5Gi"
                  },
                  "jobs": {
                    "size": ""
                  },
                  "logging": {
                    "size": ""
                  },
                  "metering": {
                    "size": "2Gi"
                  },
                  "mountPath": "/mnt/k10state",
                  "size": "20Gi",
                  "storageClass": ""
                },
                "prometheus": {
                  "external": {
                    "baseURL": "",
                    "host": "",
                    "port": ""
                  }
                },
                "rhMarketPlace": true,
                "route": {
                  "enabled": false,
                  "path": ""
                },
                "upstreamCertifiedImages": false
              },
              "grafana.ini": {
                "analytics": {
                  "check_for_updates": true
                },
                "auth": {
                  "disable_login_form": true,
                  "disable_signout_menu": true
                },
                "auth.anonymous": {
                  "enabled": true,
                  "org_name": "Main Org.",
                  "org_role": "Admin"
                },
                "auth.basic": {
                  "enabled": false
                },
                "dashboards": {
                  "default_home_dashboard_path": "/var/lib/grafana/dashboards/default/default.json"
                },
                "grafana_net": {
                  "url": "https://grafana.net"
                },
                "log": {
                  "mode": "console"
                },
                "paths": {
                  "data": "/var/lib/grafana/",
                  "logs": "/var/log/grafana",
                  "plugins": "/var/lib/grafana/plugins",
                  "provisioning": "/etc/grafana/provisioning"
                }
              },
              "headlessService": false,
              "hostAliases": [],
              "image": {
                "pullPolicy": "IfNotPresent",
                "repository": "grafana/grafana",
                "sha": "",
                "tag": ""
              },
              "imageRenderer": {
                "affinity": {},
                "enabled": false,
                "env": {
                  "HTTP_HOST": "0.0.0.0"
                },
                "grafanaProtocol": "http",
                "grafanaSubPath": "",
                "hostAliases": [],
                "image": {
                  "pullPolicy": "Always",
                  "repository": "grafana/grafana-image-renderer",
                  "sha": "",
                  "tag": "latest"
                },
                "networkPolicy": {
                  "limitEgress": false,
                  "limitIngress": true
                },
                "nodeSelector": {},
                "podPortName": "http",
                "priorityClassName": "",
                "replicas": 1,
                "resources": {},
                "revisionHistoryLimit": 10,
                "securityContext": {},
                "service": {
                  "enabled": true,
                  "port": 8081,
                  "portName": "http",
                  "targetPort": 8081
                },
                "serviceAccountName": "",
                "tolerations": []
              },
              "ingress": {
                "annotations": {},
                "enabled": false,
                "extraPaths": [],
                "hosts": [
                  "chart-example.local"
                ],
                "labels": {},
                "path": "/",
                "pathType": "Prefix",
                "tls": []
              },
              "initChownData": {
                "enabled": true,
                "resources": {}
              },
              "k10image": {
                "registry": "gcr.io",
                "repository": "kasten-images"
              },
              "ldap": {
                "config": "",
                "enabled": false,
                "existingSecret": ""
              },
              "lifecycleHooks": {},
              "livenessProbe": {
                "failureThreshold": 10,
                "httpGet": {
                  "path": "/api/health",
                  "port": 3000
                },
                "initialDelaySeconds": 60,
                "timeoutSeconds": 30
              },
              "namespaceOverride": "",
              "networkPolicy": {
                "allowExternal": true,
                "egress": {
                  "enabled": false,
                  "ports": []
                },
                "enabled": false,
                "explicitNamespacesSelector": {},
                "ingress": true
              },
              "nodeSelector": {},
              "notifiers": {},
              "persistence": {
                "accessModes": [
                  "ReadWriteOnce"
                ],
                "enabled": false,
                "finalizers": [
                  "kubernetes.io/pvc-protection"
                ],
                "inMemory": {
                  "enabled": false
                },
                "size": "10Gi",
                "type": "pvc"
              },
              "plugins": [],
              "podDisruptionBudget": {},
              "podLabels": {
                "component": "grafana"
              },
              "podPortName": "grafana",
              "prometheusName": "prometheus-server",
              "prometheusPrefixURL": "/k10/prometheus",
              "rbac": {
                "create": true,
                "extraClusterRoleRules": [],
                "extraRoleRules": [],
                "namespaced": true,
                "pspEnabled": false,
                "pspUseAppArmor": true
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/api/health",
                  "port": 3000
                }
              },
              "replicas": 1,
              "resources": {},
              "revisionHistoryLimit": 10,
              "securityContext": {
                "fsGroup": 472,
                "runAsGroup": 472,
                "runAsUser": 472
              },
              "service": {
                "annotations": {},
                "enabled": true,
                "labels": {},
                "port": 80,
                "portName": "service",
                "targetPort": 3000,
                "type": "ClusterIP"
              },
              "serviceAccount": {
                "autoMount": true,
                "create": true,
                "name": null,
                "nameTest": null
              },
              "serviceMonitor": {
                "enabled": false,
                "interval": "1m",
                "labels": {},
                "path": "/metrics",
                "relabelings": [],
                "scheme": "http",
                "scrapeTimeout": "30s",
                "tlsConfig": {}
              },
              "sidecar": {
                "dashboards": {
                  "SCProvider": true,
                  "defaultFolderName": null,
                  "enabled": false,
                  "extraMounts": [],
                  "folder": "/tmp/dashboards",
                  "folderAnnotation": null,
                  "label": "grafana_dashboard",
                  "labelValue": "",
                  "provider": {
                    "allowUiUpdates": false,
                    "disableDelete": false,
                    "folder": "",
                    "foldersFromFilesStructure": false,
                    "name": "sidecarProvider",
                    "orgid": 1,
                    "type": "file"
                  },
                  "resource": "both",
                  "script": null,
                  "searchNamespace": null,
                  "sizeLimit": {},
                  "watchMethod": "WATCH"
                },
                "datasources": {
                  "enabled": false,
                  "initDatasources": false,
                  "label": "grafana_datasource",
                  "labelValue": "",
                  "reloadURL": "http://localhost:3000/api/admin/provisioning/datasources/reload",
                  "resource": "both",
                  "searchNamespace": null,
                  "sizeLimit": {},
                  "skipReload": false,
                  "watchMethod": "WATCH"
                },
                "enableUniqueFilenames": false,
                "image": {
                  "repository": "quay.io/kiwigrid/k8s-sidecar",
                  "sha": "",
                  "tag": "1.19.2"
                },
                "imagePullPolicy": "IfNotPresent",
                "livenessProbe": {},
                "logLevel": "INFO",
                "notifiers": {
                  "enabled": false,
                  "label": "grafana_notifier",
                  "resource": "both",
                  "searchNamespace": null,
                  "sizeLimit": {}
                },
                "plugins": {
                  "enabled": false,
                  "initPlugins": false,
                  "label": "grafana_plugin",
                  "labelValue": "",
                  "reloadURL": "http://localhost:3000/api/admin/provisioning/plugins/reload",
                  "resource": "both",
                  "searchNamespace": null,
                  "sizeLimit": {},
                  "skipReload": false,
                  "watchMethod": "WATCH"
                },
                "readinessProbe": {},
                "resources": {},
                "securityContext": {}
              },
              "smtp": {
                "existingSecret": "",
                "passwordKey": "password",
                "userKey": "user"
              },
              "testFramework": {
                "enabled": false,
                "image": "bats/bats",
                "imagePullPolicy": "IfNotPresent",
                "securityContext": {},
                "tag": "v1.4.1"
              },
              "tolerations": [],
              "ubi": {
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "registry.access.redhat.com/ubi9/ubi-minimal",
                  "tag": "9.1.0-1656.1669627757"
                }
              },
              "useStatefulSet": false
            },
            "image": {
              "pullPolicy": "Always",
              "registry": "gcr.io",
              "repository": "kasten-images",
              "tag": ""
            },
            "ingress": {
              "class": "",
              "create": false,
              "host": "",
              "pathType": "ImplementationSpecific",
              "tls": {
                "enabled": false
              },
              "urlPath": ""
            },
            "injectKanisterSidecar": {
              "enabled": false,
              "namespaceSelector": {
                "matchLabels": {}
              },
              "objectSelector": {
                "matchLabels": {}
              },
              "webhookServer": {
                "port": 8080
              }
            },
            "jaeger": {
              "agentDNS": "",
              "enabled": false
            },
            "kanister": {
              "backupTimeout": 45,
              "checkRepoTimeout": 20,
              "deleteTimeout": 45,
              "efsPostRestoreTimeout": 45,
              "hookTimeout": 20,
              "podReadyWaitTimeout": 15,
              "restoreTimeout": 600,
              "statsTimeout": 20
            },
            "kanisterPodCustomAnnotations": "",
            "kanisterPodCustomLabels": "",
            "kanisterToolsImage": {
              "image": "kanister-tools",
              "pullPolicy": "Always",
              "registry": "ghcr.io",
              "repository": "kanisterio"
            },
            "kubeVirtVMs": {
              "snapshot": {
                "unfreezeTimeout": "5m"
              }
            },
            "license": "",
            "limiter": {
              "csiSnapshots": 10,
              "genericVolumeCopies": 10,
              "genericVolumeRestores": 10,
              "genericVolumeSnapshots": 10,
              "providerSnapshots": 10
            },
            "logLevel": "info",
            "metering": {
              "awsManagedLicense": false,
              "awsMarketPlaceIamRole": "",
              "awsMarketplace": false,
              "awsRegion": "",
              "consumerId": "",
              "licenseConfigSecretName": "",
              "mode": "",
              "promoID": "",
              "redhatMarketplacePayg": false,
              "reportCollectionPeriod": 1800,
              "reportPushPeriod": 3600,
              "reportingKey": "",
              "serviceAccount": {
                "create": false,
                "name": ""
              }
            },
            "networkPolicy": {
              "create": true
            },
            "optionalColocatedServices": {
              "vbrintegrationapi": {
                "enabled": true
              }
            },
            "prometheus": {
              "alertRelabelConfigs": null,
              "alertmanager": {
                "affinity": {},
                "baseURL": "http://localhost:9093",
                "clusterPeers": [],
                "configFileName": "alertmanager.yml",
                "configFromSecret": "",
                "configMapOverrideName": "",
                "deploymentAnnotations": {},
                "dnsConfig": {},
                "emptyDir": {
                  "sizeLimit": ""
                },
                "enabled": false,
                "extraArgs": {},
                "extraConfigmapMounts": [],
                "extraEnv": {},
                "extraInitContainers": [],
                "extraSecretMounts": [],
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "quay.io/prometheus/alertmanager",
                  "tag": "v0.23.0"
                },
                "ingress": {
                  "annotations": {},
                  "enabled": false,
                  "extraLabels": {},
                  "extraPaths": [],
                  "hosts": [],
                  "path": "/",
                  "pathType": "Prefix",
                  "tls": []
                },
                "name": "alertmanager",
                "nodeSelector": {},
                "persistentVolume": {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "annotations": {},
                  "enabled": true,
                  "existingClaim": "",
                  "mountPath": "/data",
                  "size": "2Gi",
                  "subPath": ""
                },
                "podAnnotations": {},
                "podDisruptionBudget": {
                  "enabled": false,
                  "maxUnavailable": 1
                },
                "podLabels": {},
                "podSecurityPolicy": {
                  "annotations": {}
                },
                "prefixURL": "",
                "priorityClassName": "",
                "probeHeaders": [],
                "replicaCount": 1,
                "resources": {},
                "securityContext": {
                  "fsGroup": 65534,
                  "runAsGroup": 65534,
                  "runAsNonRoot": true,
                  "runAsUser": 65534
                },
                "service": {
                  "annotations": {},
                  "clusterIP": "",
                  "externalIPs": [],
                  "labels": {},
                  "loadBalancerIP": "",
                  "loadBalancerSourceRanges": [],
                  "servicePort": 80,
                  "sessionAffinity": "None",
                  "type": "ClusterIP"
                },
                "statefulSet": {
                  "annotations": {},
                  "enabled": false,
                  "headless": {
                    "annotations": {},
                    "enableMeshPeer": false,
                    "labels": {},
                    "servicePort": 80
                  },
                  "labels": {},
                  "podManagementPolicy": "OrderedReady"
                },
                "tolerations": [],
                "useClusterRole": true,
                "useExistingRole": false
              },
              "alertmanagerFiles": {
                "alertmanager.yml": {
                  "global": {},
                  "receivers": [
                    {
                      "name": "default-receiver"
                    }
                  ],
                  "route": {
                    "group_interval": "5m",
                    "group_wait": "10s",
                    "receiver": "default-receiver",
                    "repeat_interval": "3h"
                  }
                }
              },
              "configmapReload": {
                "alertmanager": {
                  "enabled": true,
                  "extraArgs": {},
                  "extraConfigmapMounts": [],
                  "extraVolumeDirs": [],
                  "image": {
                    "pullPolicy": "IfNotPresent",
                    "repository": "jimmidyson/configmap-reload",
                    "tag": "v0.5.0"
                  },
                  "name": "configmap-reload",
                  "resources": {}
                },
                "prometheus": {
                  "enabled": true,
                  "extraArgs": {},
                  "extraConfigmapMounts": [],
                  "extraVolumeDirs": [],
                  "image": {
                    "pullPolicy": "IfNotPresent",
                    "repository": "jimmidyson/configmap-reload",
                    "tag": "v0.5.0"
                  },
                  "name": "configmap-reload",
                  "resources": {}
                }
              },
              "extraScrapeConfigs": null,
              "forceNamespace": null,
              "global": {
                "airgapped": {
                  "repository": ""
                },
                "imagePullSecret": "",
                "images": {
                  "admin": "",
                  "aggregatedapis": "",
                  "ambassador": "",
                  "auth": "",
                  "bloblifecyclemanager": "",
                  "catalog": "",
                  "cephtool": "",
                  "configmap-reload": "",
                  "controllermanager": "",
                  "crypto": "",
                  "dashboardbff": "",
                  "datamover": "",
                  "dex": "",
                  "emissary": "",
                  "events": "",
                  "executor": "",
                  "frontend": "",
                  "garbagecollector": "",
                  "grafana": "",
                  "jobs": "",
                  "kanister": "",
                  "kanister-tools": "",
                  "logging": "",
                  "metering": "",
                  "paygo_daemonset": "",
                  "prometheus": "",
                  "state": "",
                  "upgrade": "",
                  "vbrintegrationapi": ""
                },
                "ingress": {
                  "create": false,
                  "urlPath": ""
                },
                "network": {
                  "enable_ipv6": false
                },
                "persistence": {
                  "accessMode": "ReadWriteOnce",
                  "catalog": {
                    "size": ""
                  },
                  "enabled": true,
                  "grafana": {
                    "size": "5Gi"
                  },
                  "jobs": {
                    "size": ""
                  },
                  "logging": {
                    "size": ""
                  },
                  "metering": {
                    "size": "2Gi"
                  },
                  "mountPath": "/mnt/k10state",
                  "size": "20Gi",
                  "storageClass": ""
                },
                "prometheus": {
                  "external": {
                    "baseURL": "",
                    "host": "",
                    "port": ""
                  }
                },
                "rhMarketPlace": true,
                "route": {
                  "enabled": false,
                  "path": ""
                },
                "upstreamCertifiedImages": false
              },
              "imagePullSecrets": null,
              "initChownData": {
                "enabled": false
              },
              "k10image": {
                "registry": "gcr.io",
                "repository": "kasten-images"
              },
              "kubeStateMetrics": {
                "enabled": false
              },
              "networkPolicy": {
                "enabled": true
              },
              "nodeExporter": {
                "container": {
                  "securityContext": {
                    "allowPrivilegeEscalation": false
                  }
                },
                "dnsConfig": {},
                "enabled": false,
                "extraArgs": {},
                "extraConfigmapMounts": [],
                "extraHostPathMounts": [],
                "extraInitContainers": [],
                "hostNetwork": true,
                "hostPID": true,
                "hostRootfs": true,
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "quay.io/prometheus/node-exporter",
                  "tag": "v1.3.0"
                },
                "name": "node-exporter",
                "nodeSelector": {},
                "pod": {
                  "labels": {}
                },
                "podAnnotations": {},
                "podDisruptionBudget": {
                  "enabled": false,
                  "maxUnavailable": 1
                },
                "podSecurityPolicy": {
                  "annotations": {}
                },
                "priorityClassName": "",
                "resources": {},
                "securityContext": {
                  "fsGroup": 65534,
                  "runAsGroup": 65534,
                  "runAsNonRoot": true,
                  "runAsUser": 65534
                },
                "service": {
                  "annotations": {
                    "prometheus.io/scrape": "true"
                  },
                  "clusterIP": "None",
                  "externalIPs": [],
                  "hostPort": 9100,
                  "labels": {},
                  "loadBalancerIP": "",
                  "loadBalancerSourceRanges": [],
                  "servicePort": 9100,
                  "type": "ClusterIP"
                },
                "tolerations": [],
                "updateStrategy": {
                  "type": "RollingUpdate"
                }
              },
              "podSecurityPolicy": {
                "enabled": false
              },
              "pushgateway": {
                "deploymentAnnotations": {},
                "dnsConfig": {},
                "enabled": false,
                "extraArgs": {},
                "extraInitContainers": [],
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "prom/pushgateway",
                  "tag": "v1.4.2"
                },
                "ingress": {
                  "annotations": {},
                  "enabled": false,
                  "extraPaths": [],
                  "hosts": [],
                  "path": "/",
                  "pathType": "Prefix",
                  "tls": []
                },
                "name": "pushgateway",
                "nodeSelector": {},
                "persistentVolume": {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "annotations": {},
                  "enabled": false,
                  "existingClaim": "",
                  "mountPath": "/data",
                  "size": "2Gi",
                  "subPath": ""
                },
                "podAnnotations": {},
                "podDisruptionBudget": {
                  "enabled": false,
                  "maxUnavailable": 1
                },
                "podLabels": {},
                "podSecurityPolicy": {
                  "annotations": {}
                },
                "priorityClassName": "",
                "replicaCount": 1,
                "resources": {},
                "securityContext": {
                  "runAsNonRoot": true,
                  "runAsUser": 65534
                },
                "service": {
                  "annotations": {
                    "prometheus.io/probe": "pushgateway"
                  },
                  "clusterIP": "",
                  "externalIPs": [],
                  "labels": {},
                  "loadBalancerIP": "",
                  "loadBalancerSourceRanges": [],
                  "servicePort": 9091,
                  "type": "ClusterIP"
                },
                "tolerations": [],
                "verticalAutoscaler": {
                  "enabled": false
                }
              },
              "rbac": {
                "create": false
              },
              "ruleFiles": {},
              "scrapeCAdvisor": false,
              "server": {
                "affinity": {},
                "alertmanagers": [],
                "baseURL": "/k10/prometheus/",
                "configMapOverrideName": "k10-prometheus-config",
                "configPath": "/etc/config/prometheus.yml",
                "defaultFlagsOverride": [],
                "deploymentAnnotations": {},
                "dnsConfig": {},
                "dnsPolicy": "ClusterFirst",
                "emptyDir": {
                  "sizeLimit": ""
                },
                "enableServiceLinks": true,
                "enabled": true,
                "env": [],
                "extraArgs": {},
                "extraConfigmapMounts": [],
                "extraFlags": [
                  "web.enable-lifecycle"
                ],
                "extraHostPathMounts": [],
                "extraInitContainers": [],
                "extraSecretMounts": [],
                "extraVolumeMounts": [],
                "extraVolumes": [],
                "fullnameOverride": "prometheus-server",
                "global": {
                  "evaluation_interval": "1m",
                  "scrape_interval": "1m",
                  "scrape_timeout": "10s"
                },
                "hostAliases": [],
                "hostNetwork": false,
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "quay.io/prometheus/prometheus",
                  "tag": "v2.34.0"
                },
                "ingress": {
                  "annotations": {},
                  "enabled": false,
                  "extraLabels": {},
                  "extraPaths": [],
                  "hosts": [],
                  "path": "/",
                  "pathType": "Prefix",
                  "tls": []
                },
                "livenessProbeFailureThreshold": 3,
                "livenessProbeInitialDelay": 30,
                "livenessProbePeriodSeconds": 15,
                "livenessProbeSuccessThreshold": 1,
                "livenessProbeTimeout": 10,
                "name": "server",
                "nodeSelector": {},
                "persistentVolume": {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "annotations": {},
                  "enabled": true,
                  "existingClaim": "",
                  "mountPath": "/data",
                  "size": "8Gi",
                  "storageClass": "",
                  "subPath": ""
                },
                "podAnnotations": {},
                "podDisruptionBudget": {
                  "enabled": false,
                  "maxUnavailable": 1
                },
                "podLabels": {},
                "podSecurityPolicy": {
                  "annotations": {}
                },
                "prefixURL": "/k10/prometheus",
                "priorityClassName": "",
                "probeHeaders": [],
                "probeScheme": "HTTP",
                "readinessProbeFailureThreshold": 3,
                "readinessProbeInitialDelay": 30,
                "readinessProbePeriodSeconds": 5,
                "readinessProbeSuccessThreshold": 1,
                "readinessProbeTimeout": 4,
                "remoteRead": [],
                "remoteWrite": [],
                "replicaCount": 1,
                "resources": {},
                "retention": "30d",
                "securityContext": {
                  "fsGroup": 65534,
                  "runAsGroup": 65534,
                  "runAsNonRoot": true,
                  "runAsUser": 65534
                },
                "service": {
                  "annotations": {},
                  "clusterIP": "",
                  "enabled": true,
                  "externalIPs": [],
                  "gRPC": {
                    "enabled": false,
                    "servicePort": 10901
                  },
                  "labels": {},
                  "loadBalancerIP": "",
                  "loadBalancerSourceRanges": [],
                  "servicePort": 80,
                  "sessionAffinity": "None",
                  "statefulsetReplica": {
                    "enabled": false,
                    "replica": 0
                  },
                  "type": "ClusterIP"
                },
                "sidecarContainers": {},
                "sidecarTemplateValues": {},
                "startupProbe": {
                  "enabled": false,
                  "failureThreshold": 30,
                  "periodSeconds": 5,
                  "timeoutSeconds": 10
                },
                "statefulSet": {
                  "annotations": {},
                  "enabled": false,
                  "headless": {
                    "annotations": {},
                    "gRPC": {
                      "enabled": false,
                      "servicePort": 10901
                    },
                    "labels": {},
                    "servicePort": 80
                  },
                  "labels": {},
                  "podManagementPolicy": "OrderedReady"
                },
                "storagePath": "",
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": "100%",
                    "maxUnavailable": "100%"
                  },
                  "type": "RollingUpdate"
                },
                "tcpSocketProbeEnabled": false,
                "terminationGracePeriodSeconds": 300,
                "tolerations": [],
                "verticalAutoscaler": {
                  "enabled": false
                }
              },
              "serverFiles": {
                "alerting_rules.yml": {},
                "alerts": {},
                "prometheus.yml": {
                  "rule_files": [
                    "/etc/config/recording_rules.yml",
                    "/etc/config/alerting_rules.yml",
                    "/etc/config/rules",
                    "/etc/config/alerts"
                  ],
                  "scrape_configs": [
                    {
                      "job_name": "prometheus",
                      "static_configs": [
                        {
                          "targets": [
                            "localhost:9090"
                          ]
                        }
                      ]
                    },
                    {
                      "bearer_token_file": "/var/run/secrets/kubernetes.io/serviceaccount/token",
                      "job_name": "kubernetes-apiservers",
                      "kubernetes_sd_configs": [
                        {
                          "role": "endpoints"
                        }
                      ],
                      "relabel_configs": [
                        {
                          "action": "keep",
                          "regex": "default;kubernetes;https",
                          "source_labels": [
                            "__meta_kubernetes_namespace",
                            "__meta_kubernetes_service_name",
                            "__meta_kubernetes_endpoint_port_name"
                          ]
                        }
                      ],
                      "scheme": "https",
                      "tls_config": {
                        "ca_file": "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt",
                        "insecure_skip_verify": true
                      }
                    },
                    {
                      "bearer_token_file": "/var/run/secrets/kubernetes.io/serviceaccount/token",
                      "job_name": "kubernetes-nodes",
                      "kubernetes_sd_configs": [
                        {
                          "role": "node"
                        }
                      ],
                      "relabel_configs": [
                        {
                          "action": "labelmap",
                          "regex": "__meta_kubernetes_node_label_(.+)"
                        },
                        {
                          "replacement": "kubernetes.default.svc:443",
                          "target_label": "__address__"
                        },
                        {
                          "regex": "(.+)",
                          "replacement": "/api/v1/nodes/$1/proxy/metrics",
                          "source_labels": [
                            "__meta_kubernetes_node_name"
                          ],
                          "target_label": "__metrics_path__"
                        }
                      ],
                      "scheme": "https",
                      "tls_config": {
                        "ca_file": "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt",
                        "insecure_skip_verify": true
                      }
                    },
                    {
                      "bearer_token_file": "/var/run/secrets/kubernetes.io/serviceaccount/token",
                      "job_name": "kubernetes-nodes-cadvisor",
                      "kubernetes_sd_configs": [
                        {
                          "role": "node"
                        }
                      ],
                      "relabel_configs": [
                        {
                          "action": "labelmap",
                          "regex": "__meta_kubernetes_node_label_(.+)"
                        },
                        {
                          "replacement": "kubernetes.default.svc:443",
                          "target_label": "__address__"
                        },
                        {
                          "regex": "(.+)",
                          "replacement": "/api/v1/nodes/$1/proxy/metrics/cadvisor",
                          "source_labels": [
                            "__meta_kubernetes_node_name"
                          ],
                          "target_label": "__metrics_path__"
                        }
                      ],
                      "scheme": "https",
                      "tls_config": {
                        "ca_file": "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt",
                        "insecure_skip_verify": true
                      }
                    },
                    {
                      "honor_labels": true,
                      "job_name": "kubernetes-service-endpoints",
                      "kubernetes_sd_configs": [
                        {
                          "role": "endpoints"
                        }
                      ],
                      "relabel_configs": [
                        {
                          "action": "keep",
                          "regex": true,
                          "source_labels": [
                            "__meta_kubernetes_service_annotation_prometheus_io_scrape"
                          ]
                        },
                        {
                          "action": "drop",
                          "regex": true,
                          "source_labels": [
                            "__meta_kubernetes_service_annotation_prometheus_io_scrape_slow"
                          ]
                        },
                        {
                          "action": "replace",
                          "regex": "(https?)",
                          "source_labels": [
                            "__meta_kubernetes_service_annotation_prometheus_io_scheme"
                          ],
                          "target_label": "__scheme__"
                        },
                        {
                          "action": "replace",
                          "regex": "(.+)",
                          "source_labels": [
                            "__meta_kubernetes_service_annotation_prometheus_io_path"
                          ],
                          "target_label": "__metrics_path__"
                        },
                        {
                          "action": "replace",
                          "regex": "([^:]+)(?::\\d+)?;(\\d+)",
                          "replacement": "$1:$2",
                          "source_labels": [
                            "__address__",
                            "__meta_kubernetes_service_annotation_prometheus_io_port"
                          ],
                          "target_label": "__address__"
                        },
                        {
                          "action": "labelmap",
                          "regex": "__meta_kubernetes_service_annotation_prometheus_io_param_(.+)",
                          "replacement": "__param_$1"
                        },
                        {
                          "action": "labelmap",
                          "regex": "__meta_kubernetes_service_label_(.+)"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_namespace"
                          ],
                          "target_label": "namespace"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_service_name"
                          ],
                          "target_label": "service"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_pod_node_name"
                          ],
                          "target_label": "node"
                        }
                      ]
                    },
                    {
                      "honor_labels": true,
                      "job_name": "kubernetes-service-endpoints-slow",
                      "kubernetes_sd_configs": [
                        {
                          "role": "endpoints"
                        }
                      ],
                      "relabel_configs": [
                        {
                          "action": "keep",
                          "regex": true,
                          "source_labels": [
                            "__meta_kubernetes_service_annotation_prometheus_io_scrape_slow"
                          ]
                        },
                        {
                          "action": "replace",
                          "regex": "(https?)",
                          "source_labels": [
                            "__meta_kubernetes_service_annotation_prometheus_io_scheme"
                          ],
                          "target_label": "__scheme__"
                        },
                        {
                          "action": "replace",
                          "regex": "(.+)",
                          "source_labels": [
                            "__meta_kubernetes_service_annotation_prometheus_io_path"
                          ],
                          "target_label": "__metrics_path__"
                        },
                        {
                          "action": "replace",
                          "regex": "([^:]+)(?::\\d+)?;(\\d+)",
                          "replacement": "$1:$2",
                          "source_labels": [
                            "__address__",
                            "__meta_kubernetes_service_annotation_prometheus_io_port"
                          ],
                          "target_label": "__address__"
                        },
                        {
                          "action": "labelmap",
                          "regex": "__meta_kubernetes_service_annotation_prometheus_io_param_(.+)",
                          "replacement": "__param_$1"
                        },
                        {
                          "action": "labelmap",
                          "regex": "__meta_kubernetes_service_label_(.+)"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_namespace"
                          ],
                          "target_label": "namespace"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_service_name"
                          ],
                          "target_label": "service"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_pod_node_name"
                          ],
                          "target_label": "node"
                        }
                      ],
                      "scrape_interval": "5m",
                      "scrape_timeout": "30s"
                    },
                    {
                      "honor_labels": true,
                      "job_name": "prometheus-pushgateway",
                      "kubernetes_sd_configs": [
                        {
                          "role": "service"
                        }
                      ],
                      "relabel_configs": [
                        {
                          "action": "keep",
                          "regex": "pushgateway",
                          "source_labels": [
                            "__meta_kubernetes_service_annotation_prometheus_io_probe"
                          ]
                        }
                      ]
                    },
                    {
                      "honor_labels": true,
                      "job_name": "kubernetes-services",
                      "kubernetes_sd_configs": [
                        {
                          "role": "service"
                        }
                      ],
                      "metrics_path": "/probe",
                      "params": {
                        "module": [
                          "http_2xx"
                        ]
                      },
                      "relabel_configs": [
                        {
                          "action": "keep",
                          "regex": true,
                          "source_labels": [
                            "__meta_kubernetes_service_annotation_prometheus_io_probe"
                          ]
                        },
                        {
                          "source_labels": [
                            "__address__"
                          ],
                          "target_label": "__param_target"
                        },
                        {
                          "replacement": "blackbox",
                          "target_label": "__address__"
                        },
                        {
                          "source_labels": [
                            "__param_target"
                          ],
                          "target_label": "instance"
                        },
                        {
                          "action": "labelmap",
                          "regex": "__meta_kubernetes_service_label_(.+)"
                        },
                        {
                          "source_labels": [
                            "__meta_kubernetes_namespace"
                          ],
                          "target_label": "namespace"
                        },
                        {
                          "source_labels": [
                            "__meta_kubernetes_service_name"
                          ],
                          "target_label": "service"
                        }
                      ]
                    },
                    {
                      "honor_labels": true,
                      "job_name": "kubernetes-pods",
                      "kubernetes_sd_configs": [
                        {
                          "role": "pod"
                        }
                      ],
                      "relabel_configs": [
                        {
                          "action": "keep",
                          "regex": true,
                          "source_labels": [
                            "__meta_kubernetes_pod_annotation_prometheus_io_scrape"
                          ]
                        },
                        {
                          "action": "drop",
                          "regex": true,
                          "source_labels": [
                            "__meta_kubernetes_pod_annotation_prometheus_io_scrape_slow"
                          ]
                        },
                        {
                          "action": "replace",
                          "regex": "(https?)",
                          "source_labels": [
                            "__meta_kubernetes_pod_annotation_prometheus_io_scheme"
                          ],
                          "target_label": "__scheme__"
                        },
                        {
                          "action": "replace",
                          "regex": "(.+)",
                          "source_labels": [
                            "__meta_kubernetes_pod_annotation_prometheus_io_path"
                          ],
                          "target_label": "__metrics_path__"
                        },
                        {
                          "action": "replace",
                          "regex": "([^:]+)(?::\\d+)?;(\\d+)",
                          "replacement": "$1:$2",
                          "source_labels": [
                            "__address__",
                            "__meta_kubernetes_pod_annotation_prometheus_io_port"
                          ],
                          "target_label": "__address__"
                        },
                        {
                          "action": "labelmap",
                          "regex": "__meta_kubernetes_pod_annotation_prometheus_io_param_(.+)",
                          "replacement": "__param_$1"
                        },
                        {
                          "action": "labelmap",
                          "regex": "__meta_kubernetes_pod_label_(.+)"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_namespace"
                          ],
                          "target_label": "namespace"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_pod_name"
                          ],
                          "target_label": "pod"
                        },
                        {
                          "action": "drop",
                          "regex": "Pending|Succeeded|Failed|Completed",
                          "source_labels": [
                            "__meta_kubernetes_pod_phase"
                          ]
                        }
                      ]
                    },
                    {
                      "honor_labels": true,
                      "job_name": "kubernetes-pods-slow",
                      "kubernetes_sd_configs": [
                        {
                          "role": "pod"
                        }
                      ],
                      "relabel_configs": [
                        {
                          "action": "keep",
                          "regex": true,
                          "source_labels": [
                            "__meta_kubernetes_pod_annotation_prometheus_io_scrape_slow"
                          ]
                        },
                        {
                          "action": "replace",
                          "regex": "(https?)",
                          "source_labels": [
                            "__meta_kubernetes_pod_annotation_prometheus_io_scheme"
                          ],
                          "target_label": "__scheme__"
                        },
                        {
                          "action": "replace",
                          "regex": "(.+)",
                          "source_labels": [
                            "__meta_kubernetes_pod_annotation_prometheus_io_path"
                          ],
                          "target_label": "__metrics_path__"
                        },
                        {
                          "action": "replace",
                          "regex": "([^:]+)(?::\\d+)?;(\\d+)",
                          "replacement": "$1:$2",
                          "source_labels": [
                            "__address__",
                            "__meta_kubernetes_pod_annotation_prometheus_io_port"
                          ],
                          "target_label": "__address__"
                        },
                        {
                          "action": "labelmap",
                          "regex": "__meta_kubernetes_pod_annotation_prometheus_io_param_(.+)",
                          "replacement": "__param_$1"
                        },
                        {
                          "action": "labelmap",
                          "regex": "__meta_kubernetes_pod_label_(.+)"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_namespace"
                          ],
                          "target_label": "namespace"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_pod_name"
                          ],
                          "target_label": "pod"
                        },
                        {
                          "action": "drop",
                          "regex": "Pending|Succeeded|Failed|Completed",
                          "source_labels": [
                            "__meta_kubernetes_pod_phase"
                          ]
                        }
                      ],
                      "scrape_interval": "5m",
                      "scrape_timeout": "30s"
                    }
                  ]
                },
                "recording_rules.yml": {},
                "rules": {}
              },
              "serviceAccounts": {
                "alertmanager": {
                  "annotations": {},
                  "create": false,
                  "name": null
                },
                "kubeStateMetrics": {
                  "create": false
                },
                "nodeExporter": {
                  "annotations": {},
                  "create": false,
                  "name": null
                },
                "pushgateway": {
                  "annotations": {},
                  "create": false,
                  "name": null
                },
                "server": {
                  "annotations": {},
                  "create": true,
                  "name": null
                }
              }
            },
            "rbac": {
              "create": true
            },
            "resources": {},
            "route": {
              "annotations": {},
              "enabled": false,
              "host": "",
              "labels": {},
              "path": "",
              "tls": {
                "enabled": false,
                "insecureEdgeTerminationPolicy": "Redirect",
                "termination": "edge"
              }
            },
            "scc": {
              "create": true
            },
            "secrets": {
              "apiTlsCrt": "",
              "apiTlsKey": "",
              "awsAccessKeyId": "",
              "awsIamRole": "",
              "awsSecretAccessKey": "",
              "azureADEndpoint": "",
              "azureADResourceID": "",
              "azureClientId": "",
              "azureClientSecret": "",
              "azureCloudEnvID": "",
              "azureResourceGroup": "",
              "azureResourceMgrEndpoint": "",
              "azureSubscriptionID": "",
              "azureTenantId": "",
              "dockerConfig": "",
              "dockerConfigPath": "",
              "googleApiKey": "",
              "ibmSoftLayerApiKey": "",
              "ibmSoftLayerApiUsername": "",
              "tlsSecret": "",
              "vsphereEndpoint": "",
              "vspherePassword": "",
              "vsphereUsername": ""
            },
            "service": {
              "aggregatedApiPort": 10250,
              "externalPort": 8000,
              "gatewayAdminPort": 8877,
              "internalPort": 8000
            },
            "serviceAccount": {
              "create": true,
              "name": ""
            },
            "services": {
              "aggregatedapis": {
                "hostNetwork": false
              },
              "dashboardbff": {
                "hostNetwork": false
              },
              "executor": {
                "hostNetwork": false,
                "maxConcurrentRestoreCsiSnapshots": 3,
                "maxConcurrentRestoreGenericVolumeSnapshots": 3,
                "maxConcurrentRestoreWorkloads": 3,
                "workerCount": 8
              },
              "securityContext": {
                "fsGroup": 1000,
                "runAsUser": 1000
              }
            },
            "toolsImage": {
              "enabled": true,
              "pullPolicy": "Always"
            },
            "vault": {
              "address": "http://vault.vault.svc:8200",
              "role": "",
              "secretName": "",
              "serviceAccountTokenPath": ""
            },
            "vmWare": {
              "taskTimeoutMin": 60
            }
          }
        },
        {
          "apiVersion": "apik10.kasten.io/v1alpha1",
          "kind": "K10restore",
          "metadata": {
            "name": "k10restore"
          },
          "spec": {
            "pointInTime": null,
            "profileName": "",
            "skipResource": null,
            "sourceClusterID": ""
          }
        }
      ]
    capabilities: Full Lifecycle
    categories: Storage
    containerImage: registry.connect.redhat.com/kasten/k10-operator@sha256:c7e85c7f7fd2dedf61deba0f959f415ea8a645288915e30cec04be26dd29c7f5
    createdAt: Wed Jan 18 21:49:21 UTC 2023
    description: K10 data management platform for OpenShift, The Market Leader for Kubernetes Backup and DR
    marketplace.openshift.io/remote-workflow: https://marketplace.redhat.com/en-us/operators/k10-kasten-operator-rhmp/pricing?utm_source=openshift_console
    marketplace.openshift.io/support-workflow: https://marketplace.redhat.com/en-us/operators/k10-kasten-operator-rhmp/support?utm_source=openshift_console
    olm.properties: '[{"type": "olm.maxOpenShiftVersion", "value": "4.11"}]'
    operatorframework.io/suggested-namespace: kasten-io
    operators.openshift.io/infrastructure-features: '["disconnected"]'
    operators.operatorframework.io/builder: operator-sdk-v1.24.1
    operators.operatorframework.io/project_layout: helm.sdk.operatorframework.io/v1
    support: contact@kasten.io
  name: k10-kasten-operator-rhmp.v5.5.3
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: |-
        k10restore can recover the K10 platform in case of a variety of disasters such as
        the accidental deletion of K10, failure of underlying storage that K10 uses for its catalog,
        or even the accidental destruction of the Kubernetes cluster on which K10 is deployed.

        **Before creating k10restore**: [K10 Disaster Recovery documentation](https://docs.kasten.io/latest/operating/dr.html#recovering-with-the-operator)
      kind: K10restore
      name: k10restores.apik10.kasten.io
      specDescriptors:
      - description: Required - The cluster ID shown when enabling k10 backup
        displayName: Cluster ID
        path: sourceClusterID
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Required - Name of the location profile used for backup
        displayName: Profile name
        path: profileName
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Optional - Point in time (RFC3339) at which to evaluate restore data. Eg. "2022-01-02T15:04:05Z"
        displayName: Point in time
        path: pointInTime
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Optional - Specify if restore of policies, profiles or secrets need to be skipped. Eg. "profiles,policies"
        displayName: Resources to skip
        path: skipResource
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Enable reading the K10 Disaster Recovery passphrase from a HashiCorp Vault instance
        displayName: Enable HashiCorp Vault
        path: vault.enabled
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Vault server address
        displayName: Address
        path: vault.address
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldDependency:vault.enabled:true
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: |-
          Required when Vault authentication uses a Kubernetes service account token.
          Name of the Vault Kubernetes authentication role binding the K10 service account and namespace to the Vault policy.
        displayName: Role name
        path: vault.role
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldDependency:vault.enabled:true
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: |-
          Optional when Vault authentication uses a Kubernetes service account token.
          Defaults to /var/run/secrets/kubernetes.io/serviceaccount/token.
        displayName: Service account token path
        path: vault.serviceAccountTokenPath
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldDependency:vault.enabled:true
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Required when Vault authentication token is provided in a Kubernetes secret via "vault_token" key
        displayName: Secret name
        path: vault.secretName
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldDependency:vault.enabled:true
        - urn:alm:descriptor:com.tectonic.ui:text
      version: v1alpha1
    - description: '[Kasten''s k10](https://docs.kasten.io/) is a data lifecycle management system for all your persistence enabled container-based applications.'
      kind: K10
      name: k10s.apik10.kasten.io
      specDescriptors:
      - description: Optional - Configures basic authentication for the K10 dashboard. Once enabled, you need to either provide Authentication Details (htpasswd) or Secret Name
        displayName: Enable Basic Authentication
        path: auth.basicAuth.enabled
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - urn:alm:descriptor:com.tectonic.ui:fieldDependency:auth.tokenAuth.enabled:false
      - description: Name of an existing Secret that contains a file generated with htpasswd
        displayName: Secret Name
        path: auth.basicAuth.secretName
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldDependency:auth.basicAuth.enabled:true
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: A username and password pair separated by a colon character
        displayName: Authentication Details (htpasswd)
        path: auth.basicAuth.htpasswd
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldDependency:auth.basicAuth.enabled:true
        - urn:alm:descriptor:com.tectonic.ui:password
      - description: Optional - Configure Token based authentication for the K10 dashboard
        displayName: Enable Token Based Authentication
        path: auth.tokenAuth.enabled
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - urn:alm:descriptor:com.tectonic.ui:fieldDependency:auth.basicAuth.enabled:false
      - description: Optional - Configure Route for the K10 dashboard
        displayName: Enable K10 dashboard to be exposed via route
        path: route.enabled
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Specify FQDN (e.g., `.k10.example.com`), Defaults to empty string
        displayName: FQDN for name-based virtual host
        path: route.host
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldDependency:route.enabled:true
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Optional - Defaults to false
        displayName: Create secured edge route for exposing k10
        path: route.tls.enabled
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - urn:alm:descriptor:com.tectonic.ui:fieldDependency:route.enabled:true
      - description: Optional - Defaults to the default StorageClass of the cloud provider. (gp2 on AWS, standard on GKE, AWS & OpenStack)
        displayName: Specify StorageClassName to be used for PVCs
        path: global.persistence.storageClass
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Optional - Defaults to global size of volumes for K10 persistent services. Controlled by `global.persistence.size`
        displayName: Size of a volume for catalog service. For e.g. "20Gi"
        path: global.persistence.catalog.size
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Optional - Set to `airgap` for private-network installs.
        displayName: Control metric and license reporting
        path: metering.mode
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      version: v1alpha1
  description: K10 data management platform for OpenShift, The Market Leader for Kubernetes Backup and DR
  displayName: Kasten K10 (Free)
  icon:
  - base64data: 
    mediatype: image/png
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - get
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
        - apiGroups:
          - apik10.kasten.io
          resources:
          - k10s
          - k10s/status
          - k10s/finalizers
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - apiregistration.k8s.io
          resources:
          - apiservices
          verbs:
          - '*'
        - apiGroups:
          - security.openshift.io
          resources:
          - securitycontextconstraints
          verbs:
          - '*'
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - clusterrolebindings
          - clusterroles
          verbs:
          - '*'
        - apiGroups:
          - apps
          resources:
          - deployments
          verbs:
          - '*'
        - apiGroups:
          - networking.k8s.io
          resources:
          - networkpolicies
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - configmaps
          - persistentvolumeclaims
          - secrets
          - serviceaccounts
          - services
          verbs:
          - '*'
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - rolebindings
          - roles
          verbs:
          - '*'
        - apiGroups:
          - apik10.kasten.io
          resources:
          - k10restores
          - k10restores/status
          - k10restores/finalizers
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - clusterrolebindings
          - clusterroles
          verbs:
          - '*'
        - apiGroups:
          - security.openshift.io
          resources:
          - securitycontextconstraints
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - serviceaccounts
          verbs:
          - '*'
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - rolebindings
          - roles
          verbs:
          - '*'
        - apiGroups:
          - batch
          resources:
          - jobs
          verbs:
          - '*'
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        - apiGroups:
          - policy
          resources:
          - podsecuritypolicies
          verbs:
          - '*'
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - clusterrolebindings
          - clusterroles
          - rolebindings
          - roles
          verbs:
          - '*'
        - apiGroups:
          - apiregistration.k8s.io
          resources:
          - apiservices
          verbs:
          - '*'
        - apiGroups:
          - security.openshift.io
          resources:
          - securitycontextconstraints
          verbs:
          - '*'
        - apiGroups:
          - route.openshift.io
          resources:
          - routes
          verbs:
          - '*'
        - apiGroups:
          - admissionregistration.k8s.io
          resources:
          - mutatingwebhookconfigurations
          verbs:
          - '*'
        serviceAccountName: k10-kasten-operator-rhmp-controller-manager
      deployments:
      - label:
          control-plane: controller-manager
        name: k10-kasten-operator-rhmp-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              annotations:
                kubectl.kubernetes.io/default-container: manager
              labels:
                control-plane: controller-manager
            spec:
              containers:
              - args:
                - --secure-listen-address=0.0.0.0:8443
                - --upstream=http://127.0.0.1:8080/
                - --logtostderr=true
                - --v=0
                image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:cb836456974e510eb4bccbffadbc6d99d5f57c36caec54c767a158ffd8a025d5
                name: kube-rbac-proxy
                ports:
                - containerPort: 8443
                  name: https
                  protocol: TCP
                resources:
                  limits:
                    cpu: 500m
                    memory: 128Mi
                  requests:
                    cpu: 5m
                    memory: 64Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
              - args:
                - --health-probe-bind-address=:8081
                - --metrics-bind-address=127.0.0.1:8080
                - --leader-elect
                - --leader-election-id=k10-kasten-operator-rhmp
                env:
                - name: RELATED_IMAGE_ADMIN
                  value: registry.connect.redhat.com/kasten/admin@sha256:bdafe785c87a6e1699206bba310489db99f070fdc87522fa70a9c10a2429ccca
                - name: RELATED_IMAGE_AGGREGATEDAPIS
                  value: registry.connect.redhat.com/kasten/aggregatedapis@sha256:5088c635ec4b68bfc5f9d3cb6604dbe589699d5c18d79c1793b52e870b27d731
                - name: RELATED_IMAGE_AUTH
                  value: registry.connect.redhat.com/kasten/auth@sha256:fec638a2e7a3f07ada0fa9f23dea91f59222cc2ec1ec2673fdef162d06141062
                - name: RELATED_IMAGE_CATALOG
                  value: registry.connect.redhat.com/kasten/catalog@sha256:1236f25e6f552635f15af74b87718e8f15823ccb1dca122abc18ea831c77edd8
                - name: RELATED_IMAGE_CONTROLLERMANAGER
                  value: registry.connect.redhat.com/kasten/controllermanager@sha256:ba708655dd6ed4b8976fcd58f540bcfad238ff5089e01d8e1c0dfbe4dd63d2fd
                - name: RELATED_IMAGE_CRYPTO
                  value: registry.connect.redhat.com/kasten/crypto@sha256:976f0d444cc10e21734c13dca381446b45dfab592ec34d7c8d26616282cf7b4a
                - name: RELATED_IMAGE_DASHBOARDBFF
                  value: registry.connect.redhat.com/kasten/dashboardbff@sha256:b96eb884b96b3ebc47b0927112ad91e295aa25d6ee371bd89490bf3d907bc85a
                - name: RELATED_IMAGE_EVENTS
                  value: registry.connect.redhat.com/kasten/events@sha256:e5462e8e204ec4ba3636b61e9f9f413ab7df45d04cb2d0b169eccf3ddb5e4bf5
                - name: RELATED_IMAGE_EMISSARY
                  value: registry.connect.redhat.com/kasten/emissary@sha256:18b42b4447865d506357e949d803b53b39be7ba40ec45af7231e7ab7eeb52b20
                - name: RELATED_IMAGE_EXECUTOR
                  value: registry.connect.redhat.com/kasten/executor@sha256:ca48d5a83fc9a838ce03e75068e3c937014d261468ab211aab5995fc4eaa41f1
                - name: RELATED_IMAGE_FRONTEND
                  value: registry.connect.redhat.com/kasten/frontend@sha256:9e8b5a25ac10a02541310e31cbb8e96025f178c7f5faca49b221f5cf09d27c44
                - name: RELATED_IMAGE_JOBS
                  value: registry.connect.redhat.com/kasten/jobs@sha256:40fa3e129d08c273ee1223317c0c2d83e929d84734d84b5a5f3642ec63b6312c
                - name: RELATED_IMAGE_KANISTER
                  value: registry.connect.redhat.com/kasten/kanister@sha256:256ee5dbafeaa9244e59c5032b72f15c62a3561f4eed11a8ffa21066988f7a25
                - name: RELATED_IMAGE_LOGGING
                  value: registry.connect.redhat.com/kasten/logging@sha256:2831c4a5a6b2377711f9b2df54b6f2fd659e641e936ff73abfea045b464b6f24
                - name: RELATED_IMAGE_METERING
                  value: registry.connect.redhat.com/kasten/metering@sha256:5c16d5f5454912a50a7751958c1166408c983bb54d85853c30c4157298894f2a
                - name: RELATED_IMAGE_STATE
                  value: registry.connect.redhat.com/kasten/state@sha256:48c677b6219e8ccdd91a5fa8201b62c4685dce969fab0278e71576a9c3facefc
                - name: RELATED_IMAGE_UPGRADE
                  value: registry.connect.redhat.com/kasten/upgrade@sha256:f66908ed12fa6a52290b3f62d2f8211a41152dcc02d2e4dbfb05611a603a57b7
                - name: RELATED_IMAGE_CEPHTOOL
                  value: registry.connect.redhat.com/kasten/cephtool@sha256:25f95350a88bd4aaae234c0c29896ff3409b010e3a090ff4117d34bb4d974082
                - name: RELATED_IMAGE_DATAMOVER
                  value: registry.connect.redhat.com/kasten/datamover@sha256:af662adc55d7072a98cac9526bd52e1b28e242046e9d6559cea8bbef447adb30
                - name: RELATED_IMAGE_BLM
                  value: registry.connect.redhat.com/kasten/bloblifecyclemanager@sha256:ca09582c5f272e9c7fcf076369c43160cc4559d35001e223f062bd812fa3de55
                - name: RELATED_IMAGE_PAYGODAEMONSET
                  value: registry.connect.redhat.com/kasten/init@sha256:54e0ac751120fe504c21bb86a11b3052418dd76bdf9b9abfea869c45f8eb567a
                - name: RELATED_IMAGE_GARBAGECOLLECTOR
                  value: registry.connect.redhat.com/kasten/garbagecollector@sha256:2e6d1b88d71dc1d4acb3b75d6fd518653155ce35a1132210e9ab8d31b70496e8
                - name: RELATED_IMAGE_VBRINTEGRATIONAPI
                  value: registry.connect.redhat.com/kasten/vbrintegrationapi@sha256:3dac709e652fafb17bf6264584ae933bbe3e4af7ea72cf30e9963f9ac5dfd1fa
                - name: RELATED_IMAGE_KANISTERTOOLS
                  value: registry.connect.redhat.com/kasten/kanister-tools@sha256:0c8da74a06fcfba32c7c278861b1e7e29b40e40f2a5e38c195f4339b81ca640b
                - name: RELATED_IMAGE_PROMETHEUS
                  value: registry.connect.redhat.com/kasten/prometheus@sha256:b1df993cb098d07c5adb31078c53bb16fdd9c2d160acfa66144db4c90ac54a39
                - name: RELATED_IMAGE_CONFIGMAPRELOAD
                  value: registry.connect.redhat.com/kasten/configmap-reload@sha256:a320d6893b7b7ef006d0c4ee51bc223ecd07d845e8ec633e3485c7d1cc700395
                - name: RELATED_IMAGE_DEX
                  value: registry.connect.redhat.com/kasten/dex@sha256:11ebe4794a6f9c62d1779af994a7b883a6e96ee9d604b6496e6a9d367e694ddf
                - name: RELATED_IMAGE_GRAFANA
                  value: registry.connect.redhat.com/kasten/grafana@sha256:2a403e3794fa8a98ad444b5502018b757081e5783369dcdfef128256fce904b3
                - name: RELATED_IMAGE_RESTORECTL
                  value: registry.connect.redhat.com/kasten/restorectl@sha256:39fe9248e28c60c26fc4e2088eda9b31b01c1c1d769634eb1a6403d34a58c2c4
                image: registry.connect.redhat.com/kasten/k10-operator@sha256:c7e85c7f7fd2dedf61deba0f959f415ea8a645288915e30cec04be26dd29c7f5
                imagePullPolicy: Always
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: manager
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 8081
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources:
                  limits:
                    cpu: 800m
                    memory: 600Mi
                  requests:
                    cpu: 400m
                    memory: 200Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
              securityContext:
                runAsNonRoot: true
              serviceAccountName: k10-kasten-operator-rhmp-controller-manager
              terminationGracePeriodSeconds: 10
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        serviceAccountName: k10-kasten-operator-rhmp-controller-manager
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - kubernetes
  - storage
  - data-management
  links:
  - name: K10 Documentation
    url: https://docs.kasten.io
  - name: Kasten by Veaam
    url: https://kasten.io
  maintainers:
  - email: contact@kasten.io
    name: Kasten by Veeam
  maturity: stable
  provider:
    name: Kasten by Veeam, kasten.io
    url: https://kasten.io
  version: 5.5.3
  replaces: k10-kasten-operator-rhmp.v5.5.2
  relatedImages:
  - name: k10-operator-c7e85c7f7fd2dedf61deba0f959f415ea8a645288915e30cec04be26dd29c7f5-annotation
    image: registry.connect.redhat.com/kasten/k10-operator@sha256:c7e85c7f7fd2dedf61deba0f959f415ea8a645288915e30cec04be26dd29c7f5
  - name: kube-rbac-proxy
    image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:cb836456974e510eb4bccbffadbc6d99d5f57c36caec54c767a158ffd8a025d5
  - name: manager
    image: registry.connect.redhat.com/kasten/k10-operator@sha256:c7e85c7f7fd2dedf61deba0f959f415ea8a645288915e30cec04be26dd29c7f5
  - name: admin
    image: registry.connect.redhat.com/kasten/admin@sha256:bdafe785c87a6e1699206bba310489db99f070fdc87522fa70a9c10a2429ccca
  - name: aggregatedapis
    image: registry.connect.redhat.com/kasten/aggregatedapis@sha256:5088c635ec4b68bfc5f9d3cb6604dbe589699d5c18d79c1793b52e870b27d731
  - name: auth
    image: registry.connect.redhat.com/kasten/auth@sha256:fec638a2e7a3f07ada0fa9f23dea91f59222cc2ec1ec2673fdef162d06141062
  - name: catalog
    image: registry.connect.redhat.com/kasten/catalog@sha256:1236f25e6f552635f15af74b87718e8f15823ccb1dca122abc18ea831c77edd8
  - name: controllermanager
    image: registry.connect.redhat.com/kasten/controllermanager@sha256:ba708655dd6ed4b8976fcd58f540bcfad238ff5089e01d8e1c0dfbe4dd63d2fd
  - name: crypto
    image: registry.connect.redhat.com/kasten/crypto@sha256:976f0d444cc10e21734c13dca381446b45dfab592ec34d7c8d26616282cf7b4a
  - name: dashboardbff
    image: registry.connect.redhat.com/kasten/dashboardbff@sha256:b96eb884b96b3ebc47b0927112ad91e295aa25d6ee371bd89490bf3d907bc85a
  - name: events
    image: registry.connect.redhat.com/kasten/events@sha256:e5462e8e204ec4ba3636b61e9f9f413ab7df45d04cb2d0b169eccf3ddb5e4bf5
  - name: emissary
    image: registry.connect.redhat.com/kasten/emissary@sha256:18b42b4447865d506357e949d803b53b39be7ba40ec45af7231e7ab7eeb52b20
  - name: executor
    image: registry.connect.redhat.com/kasten/executor@sha256:ca48d5a83fc9a838ce03e75068e3c937014d261468ab211aab5995fc4eaa41f1
  - name: frontend
    image: registry.connect.redhat.com/kasten/frontend@sha256:9e8b5a25ac10a02541310e31cbb8e96025f178c7f5faca49b221f5cf09d27c44
  - name: jobs
    image: registry.connect.redhat.com/kasten/jobs@sha256:40fa3e129d08c273ee1223317c0c2d83e929d84734d84b5a5f3642ec63b6312c
  - name: kanister
    image: registry.connect.redhat.com/kasten/kanister@sha256:256ee5dbafeaa9244e59c5032b72f15c62a3561f4eed11a8ffa21066988f7a25
  - name: logging
    image: registry.connect.redhat.com/kasten/logging@sha256:2831c4a5a6b2377711f9b2df54b6f2fd659e641e936ff73abfea045b464b6f24
  - name: metering
    image: registry.connect.redhat.com/kasten/metering@sha256:5c16d5f5454912a50a7751958c1166408c983bb54d85853c30c4157298894f2a
  - name: state
    image: registry.connect.redhat.com/kasten/state@sha256:48c677b6219e8ccdd91a5fa8201b62c4685dce969fab0278e71576a9c3facefc
  - name: upgrade
    image: registry.connect.redhat.com/kasten/upgrade@sha256:f66908ed12fa6a52290b3f62d2f8211a41152dcc02d2e4dbfb05611a603a57b7
  - name: cephtool
    image: registry.connect.redhat.com/kasten/cephtool@sha256:25f95350a88bd4aaae234c0c29896ff3409b010e3a090ff4117d34bb4d974082
  - name: datamover
    image: registry.connect.redhat.com/kasten/datamover@sha256:af662adc55d7072a98cac9526bd52e1b28e242046e9d6559cea8bbef447adb30
  - name: blm
    image: registry.connect.redhat.com/kasten/bloblifecyclemanager@sha256:ca09582c5f272e9c7fcf076369c43160cc4559d35001e223f062bd812fa3de55
  - name: paygodaemonset
    image: registry.connect.redhat.com/kasten/init@sha256:54e0ac751120fe504c21bb86a11b3052418dd76bdf9b9abfea869c45f8eb567a
  - name: garbagecollector
    image: registry.connect.redhat.com/kasten/garbagecollector@sha256:2e6d1b88d71dc1d4acb3b75d6fd518653155ce35a1132210e9ab8d31b70496e8
  - name: vbrintegrationapi
    image: registry.connect.redhat.com/kasten/vbrintegrationapi@sha256:3dac709e652fafb17bf6264584ae933bbe3e4af7ea72cf30e9963f9ac5dfd1fa
  - name: kanistertools
    image: registry.connect.redhat.com/kasten/kanister-tools@sha256:0c8da74a06fcfba32c7c278861b1e7e29b40e40f2a5e38c195f4339b81ca640b
  - name: prometheus
    image: registry.connect.redhat.com/kasten/prometheus@sha256:b1df993cb098d07c5adb31078c53bb16fdd9c2d160acfa66144db4c90ac54a39
  - name: configmapreload
    image: registry.connect.redhat.com/kasten/configmap-reload@sha256:a320d6893b7b7ef006d0c4ee51bc223ecd07d845e8ec633e3485c7d1cc700395
  - name: dex
    image: registry.connect.redhat.com/kasten/dex@sha256:11ebe4794a6f9c62d1779af994a7b883a6e96ee9d604b6496e6a9d367e694ddf
  - name: grafana
    image: registry.connect.redhat.com/kasten/grafana@sha256:2a403e3794fa8a98ad444b5502018b757081e5783369dcdfef128256fce904b3
  - name: restorectl
    image: registry.connect.redhat.com/kasten/restorectl@sha256:39fe9248e28c60c26fc4e2088eda9b31b01c1c1d769634eb1a6403d34a58c2c4
